generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id
  email        String  @unique
  passwordHash String
  branch       String
  avatarUrl    String?
  isAdmin      Boolean @default(false)
  isDoctor     Boolean @default(false)

  createdAt DateTime @default(now())

  sessions      Session[]
  AddNewPatient AddNewPatient[]

  @@map("users")
}

model Session {
  id     String @id
  userId String

  expiresAt DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model AddNewPatient {
  id              String   @id @default(cuid())
  userId          String
  clinicCity      String
  patientId       Int      @unique
  apptBookingName String
  patientName     String
  dob             DateTime
  gender          String
  PhoneNumber     String
  whatsAppNumber  String
  city            String
  source          String

  appointmentFor String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  confirmAppointment confirmAppointment[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addnewpatients")
}

model confirmAppointment {
  id        String @id @default(cuid())
  patientId String

  tokenNumber Int
  slotDate    DateTime
  slotTime    String

  paymentType  String?
  startDate    DateTime
  durationDays Int?
  feelife      Int?

  primary_Compalint String[]

  amount            Int?
  orderId           String? @unique
  razorpayPaymentId String?
  razorpaySignature String?
  isCancell         Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addNewPatient AddNewPatient @relation(fields: [patientId], references: [id], onDelete: Cascade)
}
